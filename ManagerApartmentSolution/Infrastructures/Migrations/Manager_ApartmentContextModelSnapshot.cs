// <auto-generated />
using System;
using ManagerApartment.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructures.Migrations
{
    [DbContext(typeof(Manager_ApartmentContext))]
    partial class Manager_ApartmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ManagerApartment.Models.Apartment", b =>
                {
                    b.Property<int>("ApartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApartmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApartmentId"), 1L, 1);

                    b.Property<string>("ApartmentStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ApartmentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("ApartmentTypeID");

                    b.Property<int?>("BuildingId")
                        .HasColumnType("int")
                        .HasColumnName("BuildingID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int")
                        .HasColumnName("OwnerID");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("ApartmentId");

                    b.HasIndex("ApartmentTypeId");

                    b.HasIndex("BuildingId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Apartment", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.ApartmentType", b =>
                {
                    b.Property<int>("ApartmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ApartmentTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApartmentTypeId"), 1L, 1);

                    b.Property<string>("ApartmentTypeDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ApartmentTypeName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ApartmentTypeStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("ApartmentTypeId");

                    b.ToTable("ApartmentType", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"), 1L, 1);

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int")
                        .HasColumnName("ApartmentID");

                    b.Property<string>("AssetDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("AssetHistoryId")
                        .HasColumnType("int")
                        .HasColumnName("AssetHistoryID");

                    b.Property<string>("AssetItemImage")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AssetName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AssetStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("AssetId");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("AssetHistoryId");

                    b.ToTable("Asset", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.AssetHistory", b =>
                {
                    b.Property<int>("AssetHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AssetHistoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetHistoryId"), 1L, 1);

                    b.Property<string>("AssetHisItemImage")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("AssetHisQuantity")
                        .HasColumnType("int");

                    b.Property<string>("AssetHisStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("AssetHistoryId");

                    b.ToTable("Asset_History", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BillID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"), 1L, 1);

                    b.Property<string>("BillStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("BillId");

                    b.HasIndex("RequestId");

                    b.ToTable("Bill", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Building", b =>
                {
                    b.Property<int>("BuildingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BuildingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BuildingId"), 1L, 1);

                    b.Property<string>("BuildingAddress")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BuildingName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("BuildingStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("BuildingId");

                    b.ToTable("Building", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContractID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"), 1L, 1);

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int")
                        .HasColumnName("ApartmentID");

                    b.Property<string>("ContractImage")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContractStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FromDate")
                        .HasColumnType("date");

                    b.Property<int?>("TennantId")
                        .HasColumnType("int")
                        .HasColumnName("TennantID");

                    b.Property<DateTime?>("ToDate")
                        .HasColumnType("date");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("ContractId");

                    b.HasIndex("ApartmentId");

                    b.HasIndex("TennantId");

                    b.ToTable("Contract", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Owner", b =>
                {
                    b.Property<int>("OwnerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OwnerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OwnerId"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("OwnerAddress")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OwnerEmail")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OwnerName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OwnerPassword")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OwnerPhone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OwnerStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("OwnerId");

                    b.ToTable("Owner", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Request", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"), 1L, 1);

                    b.Property<int?>("ApartmentId")
                        .HasColumnType("int")
                        .HasColumnName("ApartmentID");

                    b.Property<DateTime?>("BookDateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<bool?>("IsSequence")
                        .HasColumnType("bit");

                    b.Property<string>("ReqDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ReqStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Sequence")
                        .HasColumnType("int");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("RequestId");

                    b.HasIndex("ApartmentId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ManagerApartment.Models.RequestLog", b =>
                {
                    b.Property<int>("RequestLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RequestLogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestLogId"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("MaintainItem")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RegLogStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ReqLogDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("RequestLogId");

                    b.HasIndex("RequestId");

                    b.ToTable("Request_Log", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ServiceName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ServiceStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Unit")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("ServiceId");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.ServiceDetail", b =>
                {
                    b.Property<int>("ServiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ServiceDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceDetailId"), 1L, 1);

                    b.Property<int?>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ItemBillImage")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int")
                        .HasColumnName("RequestID");

                    b.Property<string>("SerDeDescription")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<decimal?>("SerDePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("SerDeStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("ServiceID");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("ServiceDetailId");

                    b.HasIndex("RequestId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Service_Detail", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("StaffStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("StaffId");

                    b.ToTable("Staff", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.StaffLog", b =>
                {
                    b.Property<int>("StaffLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StaffLogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StaffLogId"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("RequestLogId")
                        .HasColumnType("int")
                        .HasColumnName("RequestLogID");

                    b.Property<int?>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("StaffID");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("StaffLogId");

                    b.HasIndex("RequestLogId");

                    b.HasIndex("StaffId");

                    b.ToTable("Staff_Log", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Tennant", b =>
                {
                    b.Property<int>("TennantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TennantID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TennantId"), 1L, 1);

                    b.Property<string>("CreateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TennantAddress")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TennantEmail")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TennantName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TennantPassword")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TennantPhone")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TennantStatus")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UpdateBy")
                        .HasMaxLength(30)
                        .HasColumnType("nchar(30)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("TennantId");

                    b.ToTable("Tennant", (string)null);
                });

            modelBuilder.Entity("ManagerApartment.Models.Apartment", b =>
                {
                    b.HasOne("ManagerApartment.Models.ApartmentType", "ApartmentType")
                        .WithMany("Apartments")
                        .HasForeignKey("ApartmentTypeId")
                        .HasConstraintName("FK__Apartment__Apart__2A4B4B5E");

                    b.HasOne("ManagerApartment.Models.Building", "Building")
                        .WithMany("Apartments")
                        .HasForeignKey("BuildingId")
                        .HasConstraintName("FK__Apartment__Build__2B3F6F97");

                    b.HasOne("ManagerApartment.Models.Owner", "Owner")
                        .WithMany("Apartments")
                        .HasForeignKey("OwnerId")
                        .HasConstraintName("FK__Apartment__Owner__2C3393D0");

                    b.Navigation("ApartmentType");

                    b.Navigation("Building");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ManagerApartment.Models.Asset", b =>
                {
                    b.HasOne("ManagerApartment.Models.Apartment", "Apartment")
                        .WithMany("Assets")
                        .HasForeignKey("ApartmentId")
                        .HasConstraintName("FK__Asset__Apartment__37A5467C");

                    b.HasOne("ManagerApartment.Models.AssetHistory", "AssetHistory")
                        .WithMany("Assets")
                        .HasForeignKey("AssetHistoryId")
                        .HasConstraintName("FK__Asset__AssetHist__36B12243");

                    b.Navigation("Apartment");

                    b.Navigation("AssetHistory");
                });

            modelBuilder.Entity("ManagerApartment.Models.Bill", b =>
                {
                    b.HasOne("ManagerApartment.Models.Request", "Request")
                        .WithMany("Bills")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK__Bill__RequestID__440B1D61");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ManagerApartment.Models.Contract", b =>
                {
                    b.HasOne("ManagerApartment.Models.Apartment", "Apartment")
                        .WithMany("Contracts")
                        .HasForeignKey("ApartmentId")
                        .HasConstraintName("FK__Contract__Apartm__30F848ED");

                    b.HasOne("ManagerApartment.Models.Tennant", "Tennant")
                        .WithMany("Contracts")
                        .HasForeignKey("TennantId")
                        .HasConstraintName("FK__Contract__Tennan__31EC6D26");

                    b.Navigation("Apartment");

                    b.Navigation("Tennant");
                });

            modelBuilder.Entity("ManagerApartment.Models.Request", b =>
                {
                    b.HasOne("ManagerApartment.Models.Apartment", "Apartment")
                        .WithMany("Requests")
                        .HasForeignKey("ApartmentId")
                        .HasConstraintName("FK__Requests__Apartm__3E52440B");

                    b.Navigation("Apartment");
                });

            modelBuilder.Entity("ManagerApartment.Models.RequestLog", b =>
                {
                    b.HasOne("ManagerApartment.Models.Request", "Request")
                        .WithMany("RequestLogs")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK__Request_L__Reque__412EB0B6");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ManagerApartment.Models.ServiceDetail", b =>
                {
                    b.HasOne("ManagerApartment.Models.Request", "Request")
                        .WithMany("ServiceDetails")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK__Service_D__Reque__47DBAE45");

                    b.HasOne("ManagerApartment.Models.Service", "Service")
                        .WithMany("ServiceDetails")
                        .HasForeignKey("ServiceId")
                        .HasConstraintName("FK__Service_D__Servi__46E78A0C");

                    b.Navigation("Request");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("ManagerApartment.Models.StaffLog", b =>
                {
                    b.HasOne("ManagerApartment.Models.RequestLog", "RequestLog")
                        .WithMany("StaffLogs")
                        .HasForeignKey("RequestLogId")
                        .HasConstraintName("FK__Staff_Log__Reque__4BAC3F29");

                    b.HasOne("ManagerApartment.Models.staff", "Staff")
                        .WithMany("StaffLogs")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("FK__Staff_Log__Staff__4AB81AF0");

                    b.Navigation("RequestLog");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("ManagerApartment.Models.Apartment", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("Contracts");

                    b.Navigation("Requests");
                });

            modelBuilder.Entity("ManagerApartment.Models.ApartmentType", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("ManagerApartment.Models.AssetHistory", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("ManagerApartment.Models.Building", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("ManagerApartment.Models.Owner", b =>
                {
                    b.Navigation("Apartments");
                });

            modelBuilder.Entity("ManagerApartment.Models.Request", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("RequestLogs");

                    b.Navigation("ServiceDetails");
                });

            modelBuilder.Entity("ManagerApartment.Models.RequestLog", b =>
                {
                    b.Navigation("StaffLogs");
                });

            modelBuilder.Entity("ManagerApartment.Models.Service", b =>
                {
                    b.Navigation("ServiceDetails");
                });

            modelBuilder.Entity("ManagerApartment.Models.staff", b =>
                {
                    b.Navigation("StaffLogs");
                });

            modelBuilder.Entity("ManagerApartment.Models.Tennant", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
